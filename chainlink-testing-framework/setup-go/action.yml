name: setup-run-tests-environment
description: Common golang setup
inputs:
  test_download_vendor_packages_command:
    required: false
    description: The command to download the go modules
    default: make download
  go_version:
    required: false
    description: Go version to install
  go_mod_path:
    required: false
    description: The go.mod file path
    default: "go.mod"
  cache_restore_only:
    required: false
    description: Only restore the cache, set to true if you want to restore and save on cache hit miss
    default: "false"
  cache_key_id:
    required: true
    description: Cache go vendors unique id
  no_cache:
    required: false
    description: Do not use a go cache
    default: "false"
  should_tidy:
    required: false
    description: Should we check go mod tidy
    default: "true"

runs:
  using: composite
  steps:
    - name: Setup Go
      uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
      with:
        go-version: ${{ inputs.go_version }}
        go-version-file: ${{ inputs.go_mod_path }}
        check-latest: true
        cache: false

    - name: Cache Vendor Packages
      if: inputs.cache_restore_only == 'false' && inputs.no_cache == 'false'
      uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
      id: cache-packages
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
          ~/go/bin
        key: ${{ runner.os }}-${{ inputs.cache_key_id }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-${{ inputs.cache_key_id }}-

    - name: Restore Cache Vendor Packages
      if: inputs.cache_restore_only != 'false' && inputs.no_cache == 'false'
      uses: actions/cache/restore@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
      id: restore-cache-packages
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
          ~/go/bin
        key: ${{ runner.os }}-${{ inputs.cache_key_id }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-${{ inputs.cache_key_id }}-

    - name: Tidy and check files
      if: ${{ inputs.should_tidy == 'true' }}
      uses: smartcontractkit/chainlink-github-actions/chainlink-testing-framework/go-mod-tidy@a212edfc39d51b81c38917450603cd58409b30ff
      with:
        go_mod_path: ${{ inputs.go_mod_path }}

    - name: Download Go Vendor Packages
      shell: bash
      run: ${{ inputs.test_download_vendor_packages_command }}
