name: setup-run-tests-environment
description: Common test env setup
inputs:
  test_download_vendor_packages_command:
    required: false
    description: The command to download the go modules
    default: make download
  test_download_ginkgo_command:
    required: false
    description: The command to download Ginkgo
  go_mod_path:
    required: false
    description: The go.mod file path
    default: "go.mod"
  QA_AWS_REGION:
    required: true
    description: The AWS region to use
  QA_AWS_ROLE_TO_ASSUME:
    required: true
    description: The AWS role to assume
  QA_KUBECONFIG:
    required: true
    description: The kubernetes configuration to use

runs:
  using: composite
  steps:

    # Go setup and caching
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version-file: ${{ inputs.go_mod_path }}
        check-latest: true
    - name: Cache Vendor Packages
      uses: actions/cache@v3
      id: cache-packages
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
          ~/go/bin
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Download Go Vendor Packages
      if: steps.cache-packages.outputs.cache-hit != 'true'
      shell: bash
      run: ${{ inputs.test_download_vendor_packages_command }}
    - name: Install Ginkgo CLI
      env:
        GINKGO_COMMAND: ${{ inputs.test_download_ginkgo_command }}
      shell: bash
      run: |
        if [[ ! -z "${GINKGO_COMMAND}" ]]; then
            CHECK=$(which ginkgo || true)
            if [[ -z "${CHECK}" ]]; then
                ${{ inputs.test_download_ginkgo_command }}
            fi
        fi

    # Setup AWS cred and K8s context
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ inputs.QA_AWS_REGION }}
        role-to-assume: ${{ inputs.QA_AWS_ROLE_TO_ASSUME }}
        role-duration-seconds: 3600
    - name: Set Kubernetes Context
      uses: azure/k8s-set-context@v3
      with:
        method: kubeconfig
        kubeconfig: ${{ inputs.QA_KUBECONFIG }}

    # Helm Setup
    - uses: smartcontractkit/tool-versions-to-env-action@v1.0.8
      id: tool-versions
    - uses: azure/setup-helm@v3
      with:
        version: v${{ steps.tool-versions.outputs.helm_version }}
    - name: Add required helm charts including chainlink-qa
      shell: bash
      run: |
        helm repo add bitnami https://charts.bitnami.com/bitnami
        helm repo add chainlink-qa https://raw.githubusercontent.com/smartcontractkit/qa-charts/gh-pages/

    # Display tool versions
    - name: Tool Versions
      shell: bash
      run: |
        go version
        [[ ! -z "${{ inputs.test_download_ginkgo_command }}" ]] && ginkgo version
        aws --version
        kubectl version
        helm version
        helm repo list
