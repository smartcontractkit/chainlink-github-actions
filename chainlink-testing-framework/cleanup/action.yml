name: chainlink-testing-framework-cleanup
description: Common runner for cleaning up a namespace
inputs:
  triggered_by:
    required: true
    description: The triggered-by label for the k8s namespace
    default: ci
  should_cleanup:
    required: false
    description: Whether to run the cleanup at the end, soak tests and such would not want to automatically cleanup
    default: "true"
outputs:
  did_skip_clean:
    description: Did we clean up pods
    value: ${{ steps.skipped.outputs.did_skip || 'false' }}

runs:
  using: composite
  steps:
    - name: check kubectl
      if: inputs.should_cleanup == 'true'
      id: kubectlcheck
      shell: bash
      run: |
        VERSION=$(kubectl get ns -l=triggered-by=${{ inputs.triggered_by }}-${{ github.event.pull_request.number || github.run_id }} || echo "failed")
        FAIL="${VERSION: -6}"
        echo "${FAIL}"
        if [ "${FAIL}" = "failed" ]; then
          echo "::set-output name=pass::false"
          echo "The k8s environment was not setup, so there are no environments to cleanup"
        else
          echo "::set-output name=pass::true"
        fi
    - name: cleanup k8s cluster namespaces
      if: steps.kubectlcheck.outputs.pass == 'true' && inputs.should_cleanup == 'true'
      shell: bash
      run: |
        echo "looking for namespaces"
        ITEMS=$(kubectl get ns -l=triggered-by=${{ inputs.triggered_by }}-${{ github.event.pull_request.number || github.run_id }} -o jsonpath='{.items}')
        COUNT=$(echo "${ITEMS}" | jq '. | length')
        echo "found ${COUNT} namespaces to cleanup"
        for ((i=0;i<${COUNT};i++)); do
          name=$(echo "${ITEMS}" | jq -r ".[${i}].metadata.name")
          echo "deleting namespace: ${name}"
          kubectl delete ns "${name}" || echo "namespace no longer exists"
        done
        echo "completed cleanup"
    - name: Skipped cleanup
      id: skipped
      if: inputs.should_cleanup == 'false'
      shell: bash
      run: |
        echo "Skipped cleanup"
        echo "::set-output name=did_skip::true"
